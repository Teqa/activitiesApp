{"version":3,"sources":["./src/app/pages/activity-booking/activity-booking.page.html","./src/app/pages/activity-booking/activity-booking-routing.module.ts","./src/app/pages/activity-booking/activity-booking.module.ts","./src/app/pages/activity-booking/activity-booking.page.scss","./src/app/pages/activity-booking/activity-booking.page.ts"],"names":[],"mappings":"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","file":"activity-booking-activity-booking-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n        <ion-button routerLink=\\\"/activities/\\\">\\n            <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-round-back\\\" ></ion-icon>\\n        </ion-button>\\n    </ion-buttons>\\n    <ion-title>Reservering</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-card *ngIf=\\\"information\\\">\\n        <ion-card-header>\\n            <ion-card-title>\\n                {{ information.event_desc }}\\n            </ion-card-title>\\n        <ion-card-subtitle>\\n        {{ information.date }}\\n        </ion-card-subtitle>\\n        </ion-card-header>\\n        \\n        <ion-card-content class=\\\"ion-text-center\\\">\\n            \\n            <ion-badge color=\\\"danger\\\" *ngIf=\\\"results.status == false\\\">Error</ion-badge>\\n            \\n            <ion-badge color=\\\"success\\\" *ngIf=\\\"results.booking_id\\\">Reservering: {{results.booking_id}}</ion-badge>\\n            \\n            <ng-container *ngFor=\\\"let message of results.messages\\\">\\n                <div class=\\\"error-message\\\">\\n                  <ion-icon name=\\\"information-circle-outline\\\"></ion-icon> {{ message }}\\n                </div>\\n            </ng-container>\\n        </ion-card-content>\\n     </ion-card>\\n</ion-content>    \"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ActivityBookingPage } from './activity-booking.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ActivityBookingPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ActivityBookingPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ActivityBookingPageRoutingModule } from './activity-booking-routing.module';\n\nimport { ActivityBookingPage } from './activity-booking.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ActivityBookingPageRoutingModule\n  ],\n  declarations: [ActivityBookingPage]\n})\nexport class ActivityBookingPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjdGl2aXR5LWJvb2tpbmcvYWN0aXZpdHktYm9va2luZy5wYWdlLnNjc3MifQ== */\"","import { ActivityService } from './../../services/activity.service';\nimport { ConfigService } from './../../services/config.service';\nimport { Component, OnInit } from '@angular/core';\nimport _ from \"underscore\";\n\nexport interface Iresults {\n   status: boolean,\n   messages: Array<String>\n}\n\n@Component({\n  selector: 'app-activity-booking',\n  templateUrl: './activity-booking.page.html',\n  styleUrls: ['./activity-booking.page.scss'],\n})\n\nexport class ActivityBookingPage implements OnInit {\n  information = null;\n  contact = null;\n  participants = null;\n  results = {status: null, messages: []};\n  \n  constructor(private activityService: ActivityService,\n    private configService: ConfigService) { }\n\n  ngOnInit() {\n      this.information = this.activityService.chosen_event;\n      this.contact = this.activityService.chosen_contact;\n      this.participants = this.activityService.chosen_parts;\n      let body = this._constructBooking();\n      this.activityService.subscribeEvent(body).subscribe((response) => {\n        this.results = <Iresults>response;\n        if (this.results.status == true) {\n            this.activityService.booked_events.push(this.information.event_id);\n        }\n        });\n  }\n    \n  _constructBooking() {\n      let parts = {};\n      let idx = 0;\n      _.each(this.participants, function(amount, part_id) {\n        for (var _i = 0; _i < amount; _i++) {\n            parts[idx] = {\"id\": part_id};\n            idx++;\n        }\n      });;\n      let Booking = { \n            event_id: this.information.event_id,\n            customer: this.activityService.chosen_contact, \n            participants: parts,\n        };\n      let BookingJson = JSON.stringify(Booking);\n      return BookingJson;\n  }\n}\n"],"sourceRoot":""}