{"version":3,"sources":["./src/app/pages/activities/activities.page.html","./src/app/pages/activities/activities-routing.module.ts","./src/app/pages/activities/activities.module.ts","./src/app/pages/activities/activities.page.scss","./src/app/pages/activities/activities.page.ts","./src/app/services/activity.service.ts","./src/app/services/config.service.ts"],"names":[],"mappings":"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","file":"activities-activities-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Activiteiten zoeken demo</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n \\n<ion-content>\\n \\n  <ion-searchbar [(ngModel)]=\\\"searchTerm\\\" (ionChange)=\\\"searchChanged($event)\\\"></ion-searchbar>\\n \\n  <ion-item>\\n    <ion-label>Selecteer locatie</ion-label>\\n    <ion-select [(ngModel)]=\\\"type\\\" (ionChange)=\\\"searchChanged($event)\\\">\\n      <ion-select-option value=\\\"\\\">Alles</ion-select-option>\\n      <ion-select-option value=\\\"movie\\\">Amsterdam</ion-select-option>\\n      <ion-select-option value=\\\"series\\\">Den Haag</ion-select-option>\\n      <ion-select-option value=\\\"episode\\\">Utrecht</ion-select-option>\\n    </ion-select>\\n  </ion-item>\\n \\n  <ion-list>\\n \\n    <ion-item button *ngFor=\\\"let item of (results | async)\\\" routerLink=\\\"/tab-nav/activity-details/{{item.event_id}}\\\">\\n      <ion-avatar slot=\\\"start\\\">\\n        <img src=\\\"{{appurl}}{{ item.DEFAULT_IMAGE }}\\\" *ngIf=\\\"item.DEFAULT_IMAGE != 'N/A'\\\">\\n      </ion-avatar>\\n \\n      <ion-label  class=\\\"ion-text-wrap\\\">\\n        <h3>{{ item.EVENT_DESC }}</h3>\\n        {{ item.EVENT_DATE }} <br />\\n        {{ item.EVENT_FROMTIME }} - {{ item.EVENT_TILLTIME }}\\n      </ion-label>\\n        \\n        <ion-badge color=\\\"danger\\\" *ngIf=\\\"item.NUMBER_OF_FREE == 0\\\">Vol</ion-badge>\\n        <ion-badge color=\\\"warning\\\" *ngIf=\\\"item.NUMBER_OF_FREE > 0 && item.NUMBER_OF_FREE < 4\\\">Bijna vol</ion-badge>\\n        <ion-badge color=\\\"success\\\" *ngIf=\\\"item.NUMBER_OF_FREE >= 4\\\">Vrij</ion-badge>\\n \\n    </ion-item>\\n \\n  </ion-list>\\n \\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ActivitiesPage } from './activities.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ActivitiesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ActivitiesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ActivitiesPageRoutingModule } from './activities-routing.module';\n\nimport { ActivitiesPage } from './activities.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ActivitiesPageRoutingModule\n  ],\n  declarations: [ActivitiesPage]\n})\nexport class ActivitiesPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FjdGl2aXRpZXMvYWN0aXZpdGllcy5wYWdlLnNjc3MifQ== */\"","import { ActivityService } from './../../services/activity.service';\nimport { ConfigService } from './../../services/config.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n \n@Component({\n  selector: 'app-activities',\n  templateUrl: './activities.page.html',\n  styleUrls: ['./activities.page.scss'],\n})\nexport class ActivitiesPage implements OnInit {\n \n  results: Observable<any>;\n  searchTerm: string = '';\n  appurl = this.configService.url;\n  type = '';\n \n  /**\n   * Constructor of our first page\n   * @param activityService The movie Service to get data\n   */\n  constructor(private activityService: ActivityService,\n    private configService: ConfigService) { }\n \n  ngOnInit() { \n      this.searchChanged();\n  }\n \n  searchChanged() {\n    this.results = this.activityService.searchData(this.searchTerm, this.type);\n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { ConfigService } from './config.service';\n \n// Typescript custom enum for search types (optional)\nexport enum SearchType {\n  all = '',\n  movie = 'movie',\n  series = 'series',\n  episode = 'episode'\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActivityService {\n  url = this.configService.url;\n  search = '';\n  chosen_event = null;\n  chosen_parts = null;\n  chosen_contact = null;\n  booked_events = [];\n  \n  /**\n   * Constructor of the Service with Dependency Injection\n   * @param http The standard Angular HttpClient to make requests\n   */\n  constructor(private http: HttpClient, private configService: ConfigService) { }\n  \n  /**\n  * Get data from the OmdbApi \n  * map the result to return only the results that we need\n  * \n  * @param {string} title Search Term\n  * @param {SearchType} type movie, series, episode or empty\n  * @returns Observable with the search results\n  */\n  searchData(title: string, type: string): Observable<any> {\n    this.search = '';\n    if (title != '') {\n      this.search = 'EVENT_DESC ~ ' + title; \n    }\n    return this.http.get(`${this.url}api/rest/event/filter?search=${encodeURI(this.search)}&columns=EVENT_ID,OBJ_ID,DEFAULT_IMAGE,OBJECT_IMAGE,OBJ_DESC,EVENT_DESC,EVENT_DATE,EVENT_FROMTIME,EVENT_TILLTIME,NUMBER_OF_PLACES,NUMBER_OF_FREE,NUMBER_OF_WAITINGFREE,SERIES_FIRST,SERIES_TYPE,SERIES_START,SERIES_END,REX_ID,REX_DESC,EVENT_CUSTOM02`);\n  }\n \n  /**\n  * Get the detailed information for an ID using the \"i\" parameter\n  * \n  * @param {string} event_id imdbID to retrieve information\n  * @returns Observable with detailed information\n  */\n  getDetails(event_id: string) {    \n    return this.http.get(`${this.url}api/rest/event/`+`${event_id}?expand=participants&fields=custom01,custom02,custom03,custom04,image,fromtime,tiltime,date,amount`);\n  }\n  \n  subscribeEvent(body: string) {\n    return this.http.post(`${this.url}api/rest/event/subscribe`, body);\n  }\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigService {\n    private _url = 'https://rondleidingen.i-reserve.net/';\n    \n    constructor() { }\n    \n    get url(): string\n    {\n        return this._url;\n    }\n}\n"],"sourceRoot":""}